#include<iostream>
using namespace std;
int main()
{
    ios_base::sync_with_stdio(false);
    int n,a,s,d[4]={1,3,9,27},sum;
    while(cin>>n)
    {
        while(n--)
        {
            cin>>a;
            s=3;
            sum=0;
            while(s+1)
            {
                if(d[s]<=a)
                {
                    sum++;
                    a-=d[s];
                }
                else s--;
            }
            cout<<sum<<'\n';
        }
    }
}
 
/**************************************************************
1008: 沙之國
時間限制: 1 Sec  記憶體限制: 128 MB

題目描述
從前有個叫做「阿拉巴斯坦」的沙漠王國，住著一群和沙漠對抗、樂天知命的人。在沙漠生存，水源是非常稀有和珍貴的，即使是一滴也不能浪費。為了讓人民能夠節約和好好地衡量自己的取水量，在這個國家所有的水井旁邊都放了1公升、3 公升、9 公升、27 公升的四種公用水桶，可以讓人民自行取用。然而在水井打水有個奇特的規定：一定要把公用水桶裝滿才能帶走。
例如，住在猷巴村愛喝水的魯夫大叔家裡有個 25 公升的大木桶，每天他都會把這25 公升的大木桶裝滿並且喝個精光。為了恰好裝滿25 公升的大水桶而不浪費，每天早上，他先用3 公升的水桶打7 趟水、再用1 公升的水桶打4 趟水，來來回回跑個11 趟，就可以恰好裝滿他家的大水桶而不浪費。
聰明的你應該已經發現，其實他也可以用 9 公升的水桶打2 趟水，再用3公升的水桶打1 趟水、最後再用1 公升的水桶打1 趟水，這樣他就只需要跑4趟到井邊裝水。
為了讓魯夫大叔能夠節省打水的時間，給定任何大水桶的容量P (公升)，你能不能幫魯夫大叔找出裝滿他家的大水桶所需要的最少的裝水次數呢？

輸入
輸入檔中會有多筆資料，第一行是一個正整數N，代表一共有多少組資料，接下來是N 組測試資料：
P<換行>
P 表示魯夫大叔家裡大水桶的容量(公升)， 1 <= P <= 500。

輸出
對每組測試資料，請輸出魯夫大叔最少需要打幾趟水。

輸入範例
3
1
29
100
輸出範例
1
3
6
提示
Greedy, 貪婪法

來源
NPSC2008 國中組初賽
****************************************************************/
 
/**************************************************************
    Problem: 1008
    User: max2124
    Language: C++
    Result: Accepted
    Time:4 ms
    Memory:1528 kb
****************************************************************/

